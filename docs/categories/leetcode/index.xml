<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on UnknowName</title>
    <link>http://www.unknowname.cn/categories/leetcode/</link>
    <description>Recent content in leetcode on UnknowName</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 09 Feb 2022 19:11:15 +0800</lastBuildDate><atom:link href="http://www.unknowname.cn/categories/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>堆方法解leetcode之215-数组中的第K个最大元素</title>
      <link>http://www.unknowname.cn/post/leetcode/215/</link>
      <pubDate>Wed, 09 Feb 2022 19:11:15 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/215/</guid>
      <description>原题链接 leetcode上的题目描述: 给定整数数组nums和整数k，请返回数组中第k个最大的元素。请注意，你需要找的是数组排序后的第k个最大</description>
    </item>
    
    <item>
      <title>双指针方法解leetcode之907-按奇偶排序数组</title>
      <link>http://www.unknowname.cn/post/leetcode/907/</link>
      <pubDate>Mon, 10 Jan 2022 13:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/907/</guid>
      <description>题目描述: 给定一个非负整数数组 A，返回一个数组，在该数组中， A 的所有偶数元素之后跟着所有奇数元素。 你可以返回满足此条件的任何数组作为答案。 示</description>
    </item>
    
    <item>
      <title>滑动窗口方法解leetcode之438-找到字符串中所有字母异位词</title>
      <link>http://www.unknowname.cn/post/leetcode/438/</link>
      <pubDate>Fri, 31 Dec 2021 13:37:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/438/</guid>
      <description>原题连接 题目描述: 给定两个字符串 s 和 p，找到 s 中所有 p 的 异位词 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。 输入: s = &amp;ldquo;abab&amp;rdquo;, p = &amp;ldquo;ab&amp;rdquo; 输出:</description>
    </item>
    
    <item>
      <title>滑动窗口方法解leetcode之424-替换后的最长重复字符</title>
      <link>http://www.unknowname.cn/post/leetcode/424/</link>
      <pubDate>Sat, 25 Dec 2021 10:37:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/424/</guid>
      <description>原题连接 给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k 次。在执行上述操作后，找到包含重复字</description>
    </item>
    
    <item>
      <title>数组方法解leetcode之1154-一年中的第几天</title>
      <link>http://www.unknowname.cn/post/leetcode/1154/</link>
      <pubDate>Tue, 21 Dec 2021 11:13:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/1154/</guid>
      <description>原题链接 给你一个字符串 date ，按 YYYY-MM-DD 格式表示一个 现行公元纪年法 日期。请你计算并返回该日期是当年的第几天。通常情况下，我们认为 1 月 1 日是每年的第 1 天</description>
    </item>
    
    <item>
      <title>递归方法解leetcode之113-路径总和II</title>
      <link>http://www.unknowname.cn/post/leetcode/113/</link>
      <pubDate>Tue, 07 Dec 2021 09:13:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/113/</guid>
      <description>原题链接 题目描述: 给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。叶子节点 是指没有子节点的节</description>
    </item>
    
    <item>
      <title>递归方法解leetcode之112-路径总和</title>
      <link>http://www.unknowname.cn/post/leetcode/112/</link>
      <pubDate>Mon, 06 Dec 2021 11:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/112/</guid>
      <description>原题链接 题目描述: 给你二叉树的根节点root和一个表示目标和的整数targetSum。判断该树中是否存在 根节点到叶子节点的路径，这条路径上所</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之23-合并K个升序链表</title>
      <link>http://www.unknowname.cn/post/leetcode/23/</link>
      <pubDate>Fri, 03 Dec 2021 14:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/23/</guid>
      <description>原题链接 题目描述: 给你一个链表数组，每个链表都已经按升序排列。请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例1: 输入：lists</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之4-寻找两个正序数组的中位数</title>
      <link>http://www.unknowname.cn/post/leetcode/4/</link>
      <pubDate>Wed, 01 Dec 2021 17:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/4/</guid>
      <description>原题链接 题目描述: 给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 示例 1： 输入：nums1</description>
    </item>
    
    <item>
      <title>滑动窗口解leetcode之1446-连续字符</title>
      <link>http://www.unknowname.cn/post/leetcode/1446/</link>
      <pubDate>Wed, 01 Dec 2021 14:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/1446/</guid>
      <description>滑动容器类型运用还不是很熟练，特记录一下，用于以后温习。 原题链接 题目描述: 给你一个字符串 s ，字符串的「能量」定义为：只包含一种字符的最长非空</description>
    </item>
    
    <item>
      <title>字典解leetcode之811-子域名访问计数</title>
      <link>http://www.unknowname.cn/post/leetcode/811/</link>
      <pubDate>Mon, 29 Nov 2021 17:15:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/811/</guid>
      <description>原题链接 解题思路: 1. 第一步，通过空格分割数字与域名 2. 分割出的域名再用点继续分割，分割出子域名 3. 结果集存入字典，每次拿到子域名后更新下计数 4. 遍</description>
    </item>
    
    <item>
      <title>字典解leetcode之73-矩阵置0</title>
      <link>http://www.unknowname.cn/post/leetcode/73/</link>
      <pubDate>Sun, 28 Nov 2021 16:11:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/73/</guid>
      <description>原题链接 解题思路： 1.先遍历整个矩阵，记录为0的索引值，存放在字典中,字典的KEY为结构体，记录坐标 2.遍历字典，KEY为坐标结构体，根据特</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之559-N叉树的最大深度</title>
      <link>http://www.unknowname.cn/post/leetcode/559/</link>
      <pubDate>Sun, 21 Nov 2021 15:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/559/</guid>
      <description>原题链接 题目描述: 给定一个 N 叉树，找到其最大深度。最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。N叉树输入按层序遍历序列化表示，</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之114-二叉树展开为链表</title>
      <link>http://www.unknowname.cn/post/leetcode/114/</link>
      <pubDate>Thu, 18 Nov 2021 11:02:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/114/</guid>
      <description>原题链接 题目描述: 给你二叉树的根结点root，请你将它展开为一个单链表： 展开后的单链表应该同样使用TreeNode，其中right子指针指向</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之7-整数反转</title>
      <link>http://www.unknowname.cn/post/leetcode/7/</link>
      <pubDate>Wed, 17 Nov 2021 10:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/7/</guid>
      <description>原题链接 题目描述: 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。 如果反转后整数超过 32 位的有符号整数的范围 [−231, 231 − 1] ，</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之404-二叉树的左叶子之和</title>
      <link>http://www.unknowname.cn/post/leetcode/404/</link>
      <pubDate>Mon, 15 Nov 2021 18:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/404/</guid>
      <description>原题链接 golang示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 /** * Definition for a binary tree node. * type TreeNode struct { * Val int * Left *TreeNode * Right *TreeNode * } */</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之111-二叉树的最小深度</title>
      <link>http://www.unknowname.cn/post/leetcode/111/</link>
      <pubDate>Wed, 10 Nov 2021 20:20:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/111/</guid>
      <description>原题链接 golang示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 /** * Definition for a binary tree node. * type TreeNode struct { *</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之103-二叉树的锯齿形层序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/103/</link>
      <pubDate>Wed, 10 Nov 2021 18:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/103/</guid>
      <description>原题链接 题目描述: 给定一个二叉树，返回其节点值的锯齿形层序遍历。（即先从左往右，再从右往左进行下一层遍历，以此类推，层与层之间交替进行）。 例</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之104-二叉树的最大深度</title>
      <link>http://www.unknowname.cn/post/leetcode/104/</link>
      <pubDate>Wed, 10 Nov 2021 18:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/104/</guid>
      <description>原题链接 递归代码写起来简单，但理解起来真的好难啊。迭代法虽然麻烦些，但是写多了，对理解很有帮助。 解题思路: 1. 层序遍历树。初始化时将根节点加入</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之226-翻转二叉树</title>
      <link>http://www.unknowname.cn/post/leetcode/226/</link>
      <pubDate>Tue, 09 Nov 2021 16:20:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/226/</guid>
      <description>原题链接 题目描述: 翻转一棵二叉树。 示例： 输入： 1 2 3 4 5 6 4 / \ 2 7 / \ / \ 1 3 6 9 输出： 1 2 3 4 5 6 4 / \ 7 2 / \ / \ 9 6 3 1 解题思路: 直</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之101-对称的二叉树</title>
      <link>http://www.unknowname.cn/post/leetcode/101/</link>
      <pubDate>Tue, 09 Nov 2021 14:53:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/101/</guid>
      <description>就是层序遍历，关键在于节点入队列的时候顺序。 原题链接 题目描述: 给定一个二叉树，检查它是否是镜像对称的例如，二叉树[1,2,2,3,4,4,3</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之100-相同的树</title>
      <link>http://www.unknowname.cn/post/leetcode/100/</link>
      <pubDate>Mon, 08 Nov 2021 17:03:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/100/</guid>
      <description>题目描述: 给你两棵二叉树的根节点p和q，编写一个函数来检验这两棵树是否相同。如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之94-迭代树的中序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/94/</link>
      <pubDate>Mon, 08 Nov 2021 09:35:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/94/</guid>
      <description>中序遍历为左根右的顺序 理解不了，画个简单的二叉树图，照代码看栈内数据变化就明白了。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 /**</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之144-迭代树的前序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/144/</link>
      <pubDate>Sun, 07 Nov 2021 18:35:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/144/</guid>
      <description>前序相比后序遍历，理解起来还是较容易，下面的代码如果不明白。可以画一个简单的二叉树，照代码观察下栈内的数据变化，很容易明白。 golang示例</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之145-迭代树的后序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/145/</link>
      <pubDate>Sun, 07 Nov 2021 14:05:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/145/</guid>
      <description>二叉树的后序遍历，递归法很简单，但是理解起来却很难，而且效率很低。如果要真正掌握后序遍历，还是用迭代法，理解起来要通透好多。推荐讲解这个视频</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之66-加1</title>
      <link>http://www.unknowname.cn/post/leetcode/66/</link>
      <pubDate>Thu, 04 Nov 2021 16:11:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/66/</guid>
      <description>这题用栈好解决，因为涉及到进位，后面再将数据遍历出来 题目描述 给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。 最高位数字存放</description>
    </item>
    
    <item>
      <title>双指针方法解leetcode之977-有序数组的平方</title>
      <link>http://www.unknowname.cn/post/leetcode/977/</link>
      <pubDate>Thu, 04 Nov 2021 14:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/977/</guid>
      <description>在数组结构中，要实现O(n)或者O(1)的时间复杂度时，双指针这个方法是个很好的解题思路。 原题描述: 给你一个按 非递减顺序 排序的整数数组 num</description>
    </item>
    
    <item>
      <title>双端队列解leetcode之239-滑动窗口最大值</title>
      <link>http://www.unknowname.cn/post/leetcode/239/</link>
      <pubDate>Thu, 04 Nov 2021 11:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/239/</guid>
      <description>说来惭愧，这个题目我个人死磕了四天才最终理解。感谢这个视频，最终让我理解透了。还好没放弃，四天换来理解，也可以了。重点是要在双端队列中放入元</description>
    </item>
    
    <item>
      <title>滑动窗口解leetcode之209-长度最小的数组</title>
      <link>http://www.unknowname.cn/post/leetcode/209/</link>
      <pubDate>Mon, 01 Nov 2021 19:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/209/</guid>
      <description>leetcode上的题目描述: 给定一个含有n个正整数的数组和一个正整数target。找出该数组中满足其和&amp;gt;=target的长度最小的 连</description>
    </item>
    
  </channel>
</rss>
