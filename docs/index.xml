<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UnknowName</title>
    <link>http://www.unknowname.cn/</link>
    <description>Recent content on UnknowName</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 06 Aug 2024 18:40:11 +0800</lastBuildDate><atom:link href="http://www.unknowname.cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>英语时态漫谈</title>
      <link>http://www.unknowname.cn/post/english/times/</link>
      <pubDate>Tue, 06 Aug 2024 18:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/times/</guid>
      <description>时态漫谈 用中文思维理解英语时态 本文为自己学习英语时态时遇到的问题，对于不明白的时态，网上的文章出发点是以英文思维出发，这里我就以中文思维为出</description>
    </item>
    
    <item>
      <title>fluent-bit收集运行时为Contained的容器日志</title>
      <link>http://www.unknowname.cn/post/cncf/flentd/</link>
      <pubDate>Tue, 23 Jan 2024 16:26:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/cncf/flentd/</guid>
      <description>四大组件 INPUT 数据从何而来 FILTER 在数据到达OUTPUT之前，可以修改原始数据，一般如增加属性 PARSER 数据要如何加工处理 OUTPUT 加工完后的数据要存入何处 配置示例 1</description>
    </item>
    
    <item>
      <title>BuildPack</title>
      <link>http://www.unknowname.cn/post/cncf/buildpack/</link>
      <pubDate>Wed, 10 Jan 2024 11:00:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/cncf/buildpack/</guid>
      <description>基本使用 1 2 3 4 5 6 7 8 export DOCKER_AGRS=&amp;#34;--rm -v /var/run/docker.sock:/var/run/docker.sock \ -v $(pwd):/workspace -w /workspace&amp;#34; # 查看有哪些可用的builder docker run ${DOCKER_ARGS} buildpacksio/pack build suggest # 选择一个builder来构建项目镜像，在项目根目录内</description>
    </item>
    
    <item>
      <title>KEDA HPA一分钟实践</title>
      <link>http://www.unknowname.cn/post/k8s/cncf-keda/</link>
      <pubDate>Wed, 26 Jul 2023 15:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/cncf-keda/</guid>
      <description>KEDA的核心其实是它的Scalers。它的目的是实现Kubernetes中的资源的自动伸缩，它使用的仍然是原生的HPA组件，但是它扩展了原</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-介词</title>
      <link>http://www.unknowname.cn/post/english/76/</link>
      <pubDate>Sun, 13 Nov 2022 17:20:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/76/</guid>
      <description>in in + 大地方，城市以上，表示在...。 地点状语 表语 后置定语 1 2 3 I work in Shanghai 地点状语，我在上海工作 She is in Shanghai 表语，她在上海 The girls in Shanghai are young 后置定语，在</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-名词</title>
      <link>http://www.unknowname.cn/post/english/p5/</link>
      <pubDate>Thu, 20 Oct 2022 19:10:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p5/</guid>
      <description>分类 普通名词 普通名词又可以分为可数与不可数。一般划分规则就是可数是分得清的，不可数是分不清的。 可数名词 可数名词不能单独使用，需要加冠词修饰 1</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-代词</title>
      <link>http://www.unknowname.cn/post/english/p9/</link>
      <pubDate>Sat, 15 Oct 2022 19:10:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p9/</guid>
      <description>人称代词 主格 1 I You He She We They It 宾语 1 Me You him her us them it 形容词性物主代词 只能修饰名词，作前置定语，被修饰的名词与代词之间不能加冠词 1 my your her his our their its 名</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-形容词(adj)</title>
      <link>http://www.unknowname.cn/post/english/p12/</link>
      <pubDate>Sat, 15 Oct 2022 15:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p12/</guid>
      <description>形容词主要用来修饰名词和代词，可以做定语、表语、宾语。常见的是前二种用法 复合形容词，一般中间有&amp;quot;-&amp;quot;连接起来的，如 1 man-made 人</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-被动语态</title>
      <link>http://www.unknowname.cn/post/english/p78/</link>
      <pubDate>Mon, 26 Sep 2022 19:20:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p78/</guid>
      <description>被动语态表示主语是动作的承受者。只有及物动词有被动语态 使用场景 加粗为常用 不知道具体执行者是谁 如中文的&amp;quot;家乡将要建一所学校&amp;quot</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-动名词短语</title>
      <link>http://www.unknowname.cn/post/english/p75/</link>
      <pubDate>Wed, 21 Sep 2022 19:20:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p75/</guid>
      <description>动名词短语是动词的另一种非谓语动词格式。不能做谓语，可以做主语、宾语、状语、表语、介词宾语，定语、宾补 动名词短语也是表示一个动作或者一个状态</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-动词不定式短语</title>
      <link>http://www.unknowname.cn/post/english/p73/</link>
      <pubDate>Sat, 27 Aug 2022 17:20:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p73/</guid>
      <description>动词原来是做谓语的，因此如果要作其他语使用，就需要将动词转化成非谓语动词 前置知识 非谓语动词 动词不定式和动名词都叫非谓语动词。一个动词原型不能</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-情态动词(auxv)</title>
      <link>http://www.unknowname.cn/post/english/auxv/</link>
      <pubDate>Sat, 13 Aug 2022 10:15:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/auxv/</guid>
      <description>概览 一般的情态动词都没有时态的概念，但少数有，如be able to,have to。在没有时态的情态动词中，如果想要表达出时态的含义，可以加上不同的时间状语，用以</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-特殊疑问句</title>
      <link>http://www.unknowname.cn/post/english/quest/</link>
      <pubDate>Sat, 06 Aug 2022 18:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/quest/</guid>
      <description>构成方式 特殊疑问词 + 一般疑问句 常用疑问词 where 在特殊疑问句中，可以做地点状语，表语 where做地点状语 在做地点状语时，一般出现在主谓宾结构的句子</description>
    </item>
    
    <item>
      <title>React与Mobx整合</title>
      <link>http://www.unknowname.cn/post/react/react-mobx/</link>
      <pubDate>Fri, 08 Jul 2022 09:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/react/react-mobx/</guid>
      <description>Mobx最核心就是解决React组件中的状态管理，外部的数据管理.它是一个独立的库，并不单单只适用于React.数据与视图分开。MobX管理</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-一般现在时态</title>
      <link>http://www.unknowname.cn/post/english/gener2/</link>
      <pubDate>Fri, 10 Jun 2022 15:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/gener2/</guid>
      <description>主系表 结构 主谓宾 结构 主语为非第三人称单数 非第三人称单数 当主语为I/We/You/They/名词复数 主语 + 谓语原型 + 宾语 如： I work every day They sing every day My</description>
    </item>
    
    <item>
      <title>Nick的英语入门笔记-副词(adv)</title>
      <link>http://www.unknowname.cn/post/english/p34/</link>
      <pubDate>Fri, 10 Jun 2022 15:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p34/</guid>
      <description>总览 时间、地点、方式副词主要做状语 程度副词用来修饰形容词和方式副词 频度副词也作状语，但位置不同 地点副词 一般就here,there出现较多，其</description>
    </item>
    
    <item>
      <title>React入门摘要</title>
      <link>http://www.unknowname.cn/post/react/react-simple/</link>
      <pubDate>Wed, 08 Jun 2022 09:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/react/react-simple/</guid>
      <description>声明: 此文档很不完善，只是简约版本。用于本人学习React的简要记录，用于加深记忆。建议有相关疑问时，移步官网获取更新详细信息 JMX语法 类似</description>
    </item>
    
    <item>
      <title>汇编学习-寄存器2</title>
      <link>http://www.unknowname.cn/post/assembly/day03/</link>
      <pubDate>Mon, 30 May 2022 10:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/assembly/day03/</guid>
      <description>物理地址 所有的内存单元构成的存储空间是一个一维的线性空间，每一个存储单元在这个空间中都有唯一的地址，这个唯一的地址我们称为物理地址 在8086</description>
    </item>
    
    <item>
      <title>汇编学习-寄存器1</title>
      <link>http://www.unknowname.cn/post/assembly/day02/</link>
      <pubDate>Sat, 28 May 2022 10:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/assembly/day02/</guid>
      <description>day1-基础知识 寄存器 一个典型的CPU由运算器、控制器、寄存器等器件组成，这些器件通过内部总线相连。基础知识中的总线，相对于CPU来说，是</description>
    </item>
    
    <item>
      <title>汇编学习-基础知识</title>
      <link>http://www.unknowname.cn/post/assembly/day01/</link>
      <pubDate>Fri, 27 May 2022 13:45:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/assembly/day01/</guid>
      <description>第一章 基础知识 计算机只认识机器码，它所能执行的只有0和1这两种数据，程序是由01组成，这对于维护和排错非常不友好。于是最初的大神就想到写一个</description>
    </item>
    
    <item>
      <title>MySQL binlog远程备份</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-binlog-backup/</link>
      <pubDate>Thu, 26 May 2022 17:25:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-binlog-backup/</guid>
      <description>MySQL版本5.6及以上支持远程备份binlog. 简单记录下，有需要的时候可以用得上 docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 binlog-backup:image:mysqlcontainer_name:mysql-binlog-backupnet:hostrestart:alwaysvolumes:- ./data:/dataenvironments:- TZ=Asia/Shanghai- MYSQL_ROOT_PASSWORD=passwordcommand:mysqlbinlog --read-from-remote-server \--raw</description>
    </item>
    
    <item>
      <title>Sonar scan code</title>
      <link>http://www.unknowname.cn/post/ci/sonar-init/</link>
      <pubDate>Thu, 10 Mar 2022 16:31:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ci/sonar-init/</guid>
      <description>Requirement Docker版本需要20.10及以上 1 yum install -y docker-ce SonarQube Install docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 sonarqube:image:sonarqube:communitycontainer_name:sonarenvironment:SONAR_JDBC_URL:jdbc:postgresql://128.0.100.170:5432/sonarSONAR_JDBC_USERNAME:sonarSONAR_JDBC_PASSWORD:sonarvolumes:- ./sonarqube_data:/opt/sonarqube/data- ./sonarqube_extensions:/opt/sonarqube/extensions- ./sonarqube_logs:/opt/sonarqube/logsports:- &amp;#34;9000:9000&amp;#34;db:image:postgres:12container_name:sonar-dbnet:hostenvironment:POSTGRES_USER:sonarPOSTGRES_PASSWORD:sonarvolumes:- ./sql_config:/var/lib/postgresql- ./sql_data:/var/lib/postgresql/data 访问9000端口即为Son</description>
    </item>
    
    <item>
      <title>MySQL5.7 Replication</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-repl/</link>
      <pubDate>Fri, 18 Feb 2022 14:32:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-repl/</guid>
      <description>之前一直有一个疑问，就是从master中备份数据后，在还原到slave主机的这段时间，如果master一直在写，当使用master_auto</description>
    </item>
    
    <item>
      <title>GitLab使用Kaniko构建镜像</title>
      <link>http://www.unknowname.cn/post/ci/gitalb-kaniko/</link>
      <pubDate>Tue, 15 Feb 2022 17:15:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ci/gitalb-kaniko/</guid>
      <description>安装Docker类型的GitLabRunner 一定要是Docker类型的GitLabRunner，之前测试时，没注意到这一点，一直测试没通过</description>
    </item>
    
    <item>
      <title>NGINX一些拾遗</title>
      <link>http://www.unknowname.cn/post/nginx/nginx-skill/</link>
      <pubDate>Thu, 10 Feb 2022 09:37:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/nginx-skill/</guid>
      <description>只记录指定状态的日志 以下代码片段状态码为2XX与3XX的日志不记录 1 2 3 4 5 6 map $status $loggable { ~^[23] 0; default 1; } access_log /var/log/nginx/access.log json if=$loggable; ##</description>
    </item>
    
    <item>
      <title>堆方法解leetcode之215-数组中的第K个最大元素</title>
      <link>http://www.unknowname.cn/post/leetcode/215/</link>
      <pubDate>Wed, 09 Feb 2022 19:11:15 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/215/</guid>
      <description>原题链接 leetcode上的题目描述: 给定整数数组nums和整数k，请返回数组中第k个最大的元素。请注意，你需要找的是数组排序后的第k个最大</description>
    </item>
    
    <item>
      <title>Ingress NGINX annotations</title>
      <link>http://www.unknowname.cn/post/k8s/ingress-nginx-annotations/</link>
      <pubDate>Wed, 19 Jan 2022 11:15:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/ingress-nginx-annotations/</guid>
      <description>今天看到文章说IngressNGINX实现灰度，仔细看原来是通过annotations来实现，于是简单的查了下官网，发现有几个有意思的ann</description>
    </item>
    
    <item>
      <title>双指针方法解leetcode之907-按奇偶排序数组</title>
      <link>http://www.unknowname.cn/post/leetcode/907/</link>
      <pubDate>Mon, 10 Jan 2022 13:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/907/</guid>
      <description>题目描述: 给定一个非负整数数组 A，返回一个数组，在该数组中， A 的所有偶数元素之后跟着所有奇数元素。 你可以返回满足此条件的任何数组作为答案。 示</description>
    </item>
    
    <item>
      <title>滑动窗口方法解leetcode之438-找到字符串中所有字母异位词</title>
      <link>http://www.unknowname.cn/post/leetcode/438/</link>
      <pubDate>Fri, 31 Dec 2021 13:37:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/438/</guid>
      <description>原题连接 题目描述: 给定两个字符串 s 和 p，找到 s 中所有 p 的 异位词 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。 输入: s = &amp;ldquo;abab&amp;rdquo;, p = &amp;ldquo;ab&amp;rdquo; 输出:</description>
    </item>
    
    <item>
      <title>滑动窗口方法解leetcode之424-替换后的最长重复字符</title>
      <link>http://www.unknowname.cn/post/leetcode/424/</link>
      <pubDate>Sat, 25 Dec 2021 10:37:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/424/</guid>
      <description>原题连接 给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k 次。在执行上述操作后，找到包含重复字</description>
    </item>
    
    <item>
      <title>数组方法解leetcode之1154-一年中的第几天</title>
      <link>http://www.unknowname.cn/post/leetcode/1154/</link>
      <pubDate>Tue, 21 Dec 2021 11:13:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/1154/</guid>
      <description>原题链接 给你一个字符串 date ，按 YYYY-MM-DD 格式表示一个 现行公元纪年法 日期。请你计算并返回该日期是当年的第几天。通常情况下，我们认为 1 月 1 日是每年的第 1 天</description>
    </item>
    
    <item>
      <title>Cilium for Kubernetes</title>
      <link>http://www.unknowname.cn/post/k8s/cilium/</link>
      <pubDate>Thu, 16 Dec 2021 15:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/cilium/</guid>
      <description>Cilium准备都要把Istio干翻了，还是值得研究下。那么根据官方文档来踩下坑，记录下，方便下次折腾。 注意: 由于Cilium的eBPF功能</description>
    </item>
    
    <item>
      <title>递归方法解leetcode之113-路径总和II</title>
      <link>http://www.unknowname.cn/post/leetcode/113/</link>
      <pubDate>Tue, 07 Dec 2021 09:13:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/113/</guid>
      <description>原题链接 题目描述: 给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。叶子节点 是指没有子节点的节</description>
    </item>
    
    <item>
      <title>递归方法解leetcode之112-路径总和</title>
      <link>http://www.unknowname.cn/post/leetcode/112/</link>
      <pubDate>Mon, 06 Dec 2021 11:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/112/</guid>
      <description>原题链接 题目描述: 给你二叉树的根节点root和一个表示目标和的整数targetSum。判断该树中是否存在 根节点到叶子节点的路径，这条路径上所</description>
    </item>
    
    <item>
      <title>Ingress NGINX与Kubernetes版本支持一览</title>
      <link>http://www.unknowname.cn/post/k8s/ingress-nginx-k8s-version/</link>
      <pubDate>Sat, 04 Dec 2021 11:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/ingress-nginx-k8s-version/</guid>
      <description>Ingress-nginx官方的支持列表只是显示最近的几个版本，对应很早就上了船的用户来说，我想没有几个人会轻易的去升级K8S的版本。当需要</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之23-合并K个升序链表</title>
      <link>http://www.unknowname.cn/post/leetcode/23/</link>
      <pubDate>Fri, 03 Dec 2021 14:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/23/</guid>
      <description>原题链接 题目描述: 给你一个链表数组，每个链表都已经按升序排列。请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例1: 输入：lists</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之4-寻找两个正序数组的中位数</title>
      <link>http://www.unknowname.cn/post/leetcode/4/</link>
      <pubDate>Wed, 01 Dec 2021 17:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/4/</guid>
      <description>原题链接 题目描述: 给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 示例 1： 输入：nums1</description>
    </item>
    
    <item>
      <title>滑动窗口解leetcode之1446-连续字符</title>
      <link>http://www.unknowname.cn/post/leetcode/1446/</link>
      <pubDate>Wed, 01 Dec 2021 14:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/1446/</guid>
      <description>滑动容器类型运用还不是很熟练，特记录一下，用于以后温习。 原题链接 题目描述: 给你一个字符串 s ，字符串的「能量」定义为：只包含一种字符的最长非空</description>
    </item>
    
    <item>
      <title>字典解leetcode之811-子域名访问计数</title>
      <link>http://www.unknowname.cn/post/leetcode/811/</link>
      <pubDate>Mon, 29 Nov 2021 17:15:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/811/</guid>
      <description>原题链接 解题思路: 1. 第一步，通过空格分割数字与域名 2. 分割出的域名再用点继续分割，分割出子域名 3. 结果集存入字典，每次拿到子域名后更新下计数 4. 遍</description>
    </item>
    
    <item>
      <title>字典解leetcode之73-矩阵置0</title>
      <link>http://www.unknowname.cn/post/leetcode/73/</link>
      <pubDate>Sun, 28 Nov 2021 16:11:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/73/</guid>
      <description>原题链接 解题思路： 1.先遍历整个矩阵，记录为0的索引值，存放在字典中,字典的KEY为结构体，记录坐标 2.遍历字典，KEY为坐标结构体，根据特</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之559-N叉树的最大深度</title>
      <link>http://www.unknowname.cn/post/leetcode/559/</link>
      <pubDate>Sun, 21 Nov 2021 15:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/559/</guid>
      <description>原题链接 题目描述: 给定一个 N 叉树，找到其最大深度。最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。N叉树输入按层序遍历序列化表示，</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之114-二叉树展开为链表</title>
      <link>http://www.unknowname.cn/post/leetcode/114/</link>
      <pubDate>Thu, 18 Nov 2021 11:02:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/114/</guid>
      <description>原题链接 题目描述: 给你二叉树的根结点root，请你将它展开为一个单链表： 展开后的单链表应该同样使用TreeNode，其中right子指针指向</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之7-整数反转</title>
      <link>http://www.unknowname.cn/post/leetcode/7/</link>
      <pubDate>Wed, 17 Nov 2021 10:33:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/7/</guid>
      <description>原题链接 题目描述: 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。 如果反转后整数超过 32 位的有符号整数的范围 [−231, 231 − 1] ，</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之404-二叉树的左叶子之和</title>
      <link>http://www.unknowname.cn/post/leetcode/404/</link>
      <pubDate>Mon, 15 Nov 2021 18:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/404/</guid>
      <description>原题链接 golang示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 /** * Definition for a binary tree node. * type TreeNode struct { * Val int * Left *TreeNode * Right *TreeNode * } */</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之111-二叉树的最小深度</title>
      <link>http://www.unknowname.cn/post/leetcode/111/</link>
      <pubDate>Wed, 10 Nov 2021 20:20:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/111/</guid>
      <description>原题链接 golang示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 /** * Definition for a binary tree node. * type TreeNode struct { *</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之103-二叉树的锯齿形层序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/103/</link>
      <pubDate>Wed, 10 Nov 2021 18:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/103/</guid>
      <description>原题链接 题目描述: 给定一个二叉树，返回其节点值的锯齿形层序遍历。（即先从左往右，再从右往左进行下一层遍历，以此类推，层与层之间交替进行）。 例</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之104-二叉树的最大深度</title>
      <link>http://www.unknowname.cn/post/leetcode/104/</link>
      <pubDate>Wed, 10 Nov 2021 18:00:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/104/</guid>
      <description>原题链接 递归代码写起来简单，但理解起来真的好难啊。迭代法虽然麻烦些，但是写多了，对理解很有帮助。 解题思路: 1. 层序遍历树。初始化时将根节点加入</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之226-翻转二叉树</title>
      <link>http://www.unknowname.cn/post/leetcode/226/</link>
      <pubDate>Tue, 09 Nov 2021 16:20:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/226/</guid>
      <description>原题链接 题目描述: 翻转一棵二叉树。 示例： 输入： 1 2 3 4 5 6 4 / \ 2 7 / \ / \ 1 3 6 9 输出： 1 2 3 4 5 6 4 / \ 7 2 / \ / \ 9 6 3 1 解题思路: 直</description>
    </item>
    
    <item>
      <title>队列方法解leetcode之101-对称的二叉树</title>
      <link>http://www.unknowname.cn/post/leetcode/101/</link>
      <pubDate>Tue, 09 Nov 2021 14:53:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/101/</guid>
      <description>就是层序遍历，关键在于节点入队列的时候顺序。 原题链接 题目描述: 给定一个二叉树，检查它是否是镜像对称的例如，二叉树[1,2,2,3,4,4,3</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之100-相同的树</title>
      <link>http://www.unknowname.cn/post/leetcode/100/</link>
      <pubDate>Mon, 08 Nov 2021 17:03:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/100/</guid>
      <description>题目描述: 给你两棵二叉树的根节点p和q，编写一个函数来检验这两棵树是否相同。如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之94-迭代树的中序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/94/</link>
      <pubDate>Mon, 08 Nov 2021 09:35:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/94/</guid>
      <description>中序遍历为左根右的顺序 理解不了，画个简单的二叉树图，照代码看栈内数据变化就明白了。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 /**</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之144-迭代树的前序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/144/</link>
      <pubDate>Sun, 07 Nov 2021 18:35:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/144/</guid>
      <description>前序相比后序遍历，理解起来还是较容易，下面的代码如果不明白。可以画一个简单的二叉树，照代码观察下栈内的数据变化，很容易明白。 golang示例</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之145-迭代树的后序遍历</title>
      <link>http://www.unknowname.cn/post/leetcode/145/</link>
      <pubDate>Sun, 07 Nov 2021 14:05:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/145/</guid>
      <description>二叉树的后序遍历，递归法很简单，但是理解起来却很难，而且效率很低。如果要真正掌握后序遍历，还是用迭代法，理解起来要通透好多。推荐讲解这个视频</description>
    </item>
    
    <item>
      <title>栈方法解leetcode之66-加1</title>
      <link>http://www.unknowname.cn/post/leetcode/66/</link>
      <pubDate>Thu, 04 Nov 2021 16:11:00 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/66/</guid>
      <description>这题用栈好解决，因为涉及到进位，后面再将数据遍历出来 题目描述 给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。 最高位数字存放</description>
    </item>
    
    <item>
      <title>双指针方法解leetcode之977-有序数组的平方</title>
      <link>http://www.unknowname.cn/post/leetcode/977/</link>
      <pubDate>Thu, 04 Nov 2021 14:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/977/</guid>
      <description>在数组结构中，要实现O(n)或者O(1)的时间复杂度时，双指针这个方法是个很好的解题思路。 原题描述: 给你一个按 非递减顺序 排序的整数数组 num</description>
    </item>
    
    <item>
      <title>双端队列解leetcode之239-滑动窗口最大值</title>
      <link>http://www.unknowname.cn/post/leetcode/239/</link>
      <pubDate>Thu, 04 Nov 2021 11:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/239/</guid>
      <description>说来惭愧，这个题目我个人死磕了四天才最终理解。感谢这个视频，最终让我理解透了。还好没放弃，四天换来理解，也可以了。重点是要在双端队列中放入元</description>
    </item>
    
    <item>
      <title>滑动窗口解leetcode之209-长度最小的数组</title>
      <link>http://www.unknowname.cn/post/leetcode/209/</link>
      <pubDate>Mon, 01 Nov 2021 19:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/leetcode/209/</guid>
      <description>leetcode上的题目描述: 给定一个含有n个正整数的数组和一个正整数target。找出该数组中满足其和&amp;gt;=target的长度最小的 连</description>
    </item>
    
    <item>
      <title>Windows清理大文件内容</title>
      <link>http://www.unknowname.cn/post/windows/clean-file-null/</link>
      <pubDate>Mon, 01 Nov 2021 16:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/windows/clean-file-null/</guid>
      <description>Linux环境下，清理大文件可以用cat /dev/null &amp;gt; filename重定向，没想到Windows也是支持类似的命令，特记录下 在Powershell命</description>
    </item>
    
    <item>
      <title>好用的开源工具合集</title>
      <link>http://www.unknowname.cn/post/opentools/web/</link>
      <pubDate>Thu, 07 Oct 2021 16:55:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/opentools/web/</guid>
      <description>Web Wrk 快速压测工具 Windows工具 SwitchHosts 自动更新GitHub最新地址，用于解决DNS污染引起访问不了的问题 ifconfig.io 查询出口IP Google 墙内愉快的Google</description>
    </item>
    
    <item>
      <title>Ubuntu命令速记</title>
      <link>http://www.unknowname.cn/post/linux/ubuntu/</link>
      <pubDate>Thu, 07 Oct 2021 16:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/linux/ubuntu/</guid>
      <description>CentOS官方已停止维护了，作为曾经的Linux服务器操作系统的霸主也不免有衰落的这一天。以后，就要和Ubuntu说你好了。 系统管理 搜索包</description>
    </item>
    
    <item>
      <title>基于Prometheus-adapter的自定义指标的HPA</title>
      <link>http://www.unknowname.cn/post/k8s/custom-metrics-hpa/</link>
      <pubDate>Wed, 15 Sep 2021 10:21:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/custom-metrics-hpa/</guid>
      <description>此为关于Prometheus-adapter的第二篇，其一基础以及安装请见其一. 虽然有Kube-Prometheus与Prometheus-</description>
    </item>
    
    <item>
      <title>Xtrabackup源码编译安装</title>
      <link>http://www.unknowname.cn/post/database/mysql/xtrabackup-install-by-arm/</link>
      <pubDate>Tue, 14 Sep 2021 09:08:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/xtrabackup-install-by-arm/</guid>
      <description>xtrabackup好用，但奈何国外对ARM架构支持不是很好，官网并没有现成的ARM包，只能源码编译了。本镜像适用于MySQL5.7系列。 Dockerfile</description>
    </item>
    
    <item>
      <title>Graylog常见一些问题处理</title>
      <link>http://www.unknowname.cn/post/graylog/graylog-faq/</link>
      <pubDate>Mon, 30 Aug 2021 10:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/graylog/graylog-faq/</guid>
      <description>查询提示Try recalculating your index ranges. MongoDB端操作 1 2 3 4 mongo use graylog; db.index_ranges.drop() exit Graylog端 进入Graylog管理页，进入system-&amp;gt;indice</description>
    </item>
    
    <item>
      <title>NGINX Ingress路由增加前缀</title>
      <link>http://www.unknowname.cn/post/k8s/nginx-ingress-add-prefix/</link>
      <pubDate>Fri, 27 Aug 2021 14:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/nginx-ingress-add-prefix/</guid>
      <description>需求场景 通过URL可以快速区分与判断是那个服务 集团性的公司，将不同业务通过统一域名对外，提升SEO权重 样例文件 ing.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description>
    </item>
    
    <item>
      <title>Prometheus-adapter与kube-prometheus安装联动</title>
      <link>http://www.unknowname.cn/post/k8s/prometheos-adpater/</link>
      <pubDate>Sat, 31 Jul 2021 10:21:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/prometheos-adpater/</guid>
      <description>组件介绍 Kube-Prometheus 项目用来方便在Kubernetes中安装Prometheus Prometheus-adapter用来将Prometheus采集到的</description>
    </item>
    
    <item>
      <title>Kubectl 多集群连接</title>
      <link>http://www.unknowname.cn/post/k8s/kubectl/</link>
      <pubDate>Wed, 28 Jul 2021 11:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/kubectl/</guid>
      <description>设置KUBECONFIG环境变量 以下假设有两个配置kubeconfig。两个集群的contexts[i].context.name和clus</description>
    </item>
    
    <item>
      <title>Calico for Kubernetes</title>
      <link>http://www.unknowname.cn/post/k8s/calico/</link>
      <pubDate>Tue, 22 Jun 2021 16:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/calico/</guid>
      <description>本文出自官方文档，原文连接 前期准备 Calico支持使用ETCD与Kubernetes API作为数据的存储。官方文档建议在自建的Kuberne</description>
    </item>
    
    <item>
      <title>MySQL归档脚本</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-migration/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-migration/</guid>
      <description>贴一个迁移MySQL数据库的脚本 脚本主要实现将原库的ibd文件复制出来后，通过IMPORT TABLESPACE还原回去 使用前提 原表的ibd文</description>
    </item>
    
    <item>
      <title>Golang 图简单实现</title>
      <link>http://www.unknowname.cn/post/datastruct/graph/</link>
      <pubDate>Wed, 16 Jun 2021 16:55:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/datastruct/graph/</guid>
      <description>断断续续啃数据结构的图，折腾了一个月，这拖延症不轻。经典教材主要还是基于邻接表，Bing搜索的Golang实现并不是基于它，这样学习起来就有</description>
    </item>
    
    <item>
      <title>如何优雅的扩展Linux磁盘</title>
      <link>http://www.unknowname.cn/post/linux/aliyun-disk-extend/</link>
      <pubDate>Tue, 18 May 2021 14:45:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/linux/aliyun-disk-extend/</guid>
      <description>前提条件 对于数据库的应用来说，扩展磁盘是免不了会发生的事情。但是数据库一般都是重要的业务组件，很可能不能接受停机的情况发生。那么在前期规划就</description>
    </item>
    
    <item>
      <title>RabbitMQ生产优化</title>
      <link>http://www.unknowname.cn/post/queue/rabbitmq-prod/</link>
      <pubDate>Tue, 18 May 2021 09:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/queue/rabbitmq-prod/</guid>
      <description>原文出处: https://www.rabbitmq.com/docs/networking 主要分为操作系统优化与RabbitMQ自身的优化二项 操作系统配置项 最大文件打开描述符 默认为65536, 官方要求最少50K，并同时</description>
    </item>
    
    <item>
      <title>MySQL推荐配置</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-conf/</link>
      <pubDate>Thu, 13 May 2021 11:32:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-conf/</guid>
      <description>mysqld.cnf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 character_set_server = utf8mb4 # InnoDB</description>
    </item>
    
    <item>
      <title>MySQL TableSpace表空间</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-tablespce/</link>
      <pubDate>Wed, 21 Apr 2021 10:32:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-tablespce/</guid>
      <description>What TableSpace 表空间是一个存储位置，可以保存实际的底层数据库对象的数据。在MySQL里面，它主要存储InnoDB存储引擎的底层数据。它在物理数据和逻辑</description>
    </item>
    
    <item>
      <title>Flink 入门简要笔记</title>
      <link>http://www.unknowname.cn/post/flink/flink-init/</link>
      <pubDate>Fri, 09 Apr 2021 16:00:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/flink/flink-init/</guid>
      <description>核心概念 流(Streams) 流分为无限与有限，无限为DataStream,有限为DataSet 状态(State) 状态是计算过程中的数据信息，</description>
    </item>
    
    <item>
      <title>MySQL分区总结</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-partion/</link>
      <pubDate>Tue, 30 Mar 2021 20:32:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-partion/</guid>
      <description>前提 检查是否打开分区功能 1 show variables like &amp;#34;%partition%&amp;#34;\G 为1或YES表示打开 分区表的限制 一个表最多只能有1024个分区 如果分区字段中有主键或者唯一索引的列，那么所</description>
    </item>
    
    <item>
      <title>MySQL xtrabackup工具使用</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-backup/</link>
      <pubDate>Mon, 29 Mar 2021 19:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-backup/</guid>
      <description>xtrabackup安装 原生的mysqldump在库还小的时候还勉强可以用，一旦超过2/30G的时候就很费时。这个时候xtrabackup就</description>
    </item>
    
    <item>
      <title>Kubernetes使用NFS作为StorageClass</title>
      <link>http://www.unknowname.cn/post/k8s/k8s-nfs-pv/</link>
      <pubDate>Fri, 19 Mar 2021 19:30:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/k8s-nfs-pv/</guid>
      <description>官方文档: https://github.com/kubernetes-incubator/external-storage NFS端配置 安装服务 1 2 3 4 5 6 7 8 9 # 安装NFS服务 yum -y install nfs-utils rpcbind # 设置共享目录参数 echo &amp;#34;/data/nfs 128.0.255.0/16(rw, no_root_squash)&amp;#34; &amp;gt; /etc/exports # 启动服务 systemctl enable rpcbind &amp;amp;&amp;amp; systemctl start rpcbind systemctl enable nfs &amp;amp;&amp;amp; systemctl</description>
    </item>
    
    <item>
      <title>基于bind的DNS主备服务搭建指南</title>
      <link>http://www.unknowname.cn/post/linux/named/</link>
      <pubDate>Fri, 19 Mar 2021 18:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/linux/named/</guid>
      <description>基础概念 正解 将主机名解析为IP地址。如将www.qq.com解析至1.1.1.1。这是一般应用场景 反解 将IP解析为主机名。如上面将1.1.1</description>
    </item>
    
    <item>
      <title>K8S集群上部署Ceph</title>
      <link>http://www.unknowname.cn/post/ceph/k8s-install-ceph/</link>
      <pubDate>Wed, 03 Mar 2021 13:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ceph/k8s-install-ceph/</guid>
      <description>现在都讲究云原生，Rook是一个云原生存储开源项目。基于它部署Ceph将十分简单方便 安装Ceph集群。下载Rook相应的Release包，并</description>
    </item>
    
    <item>
      <title>Ceph介绍</title>
      <link>http://www.unknowname.cn/post/ceph/ceph-intr/</link>
      <pubDate>Wed, 03 Mar 2021 13:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ceph/ceph-intr/</guid>
      <description>概念介绍 Ceph是一个开源的分布式系统，提供多种存储方式。 一个Ceph集群由两种类型的后台进程（Daemon）组成。OSD Daemon和Ce</description>
    </item>
    
    <item>
      <title>Bash/Shell语法速览与技巧</title>
      <link>http://www.unknowname.cn/post/linux/bash/</link>
      <pubDate>Tue, 02 Mar 2021 17:45:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/linux/bash/</guid>
      <description>Shell基础语法 循环 while循环 while死循环 1 2 3 4 5 while true do echo &amp;#34;whle loop&amp;#34; sleep 10 done for循环 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 范围循环 for</description>
    </item>
    
    <item>
      <title>Kubernetes安装Nginx Ingress以及优化</title>
      <link>http://www.unknowname.cn/post/k8s/k8s-nginx-ingress/</link>
      <pubDate>Tue, 02 Mar 2021 13:25:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/k8s-nginx-ingress/</guid>
      <description>NGINX Ingress官方的YAML文件是以Deployment方式运行的，这样就会有坑，Pod会到处跑，即使加上nodeSecetor，也是会有</description>
    </item>
    
    <item>
      <title>Elasticsearch常用API</title>
      <link>http://www.unknowname.cn/post/es/es-api/</link>
      <pubDate>Mon, 01 Mar 2021 19:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/es/es-api/</guid>
      <description>索引API 查看索引分布情况 curl http://es:9200/_cat/shards?pretty 查看所有索引 curl -XGET http://es:9200/_cat/indices?pretty 删除指定索引 curl -XDELETE http://es:9200/IndexName 索引配置信息 curl -XGET http://es:9200/IndexName/_settings?pretty 取消所有索引只读模式 curl -XPUT -H &amp;quot;Content-type: application/json&amp;quot; http://es:9200/_settings -d &#39;{ &amp;quot;index.blocks.read_only_allow_delete&amp;quot;:&amp;quot;false&amp;quot; }&#39; 索引重命名 curl -XPOST -H</description>
    </item>
    
    <item>
      <title>Elasticsearch正确重启维护</title>
      <link>http://www.unknowname.cn/post/es/es-stop/</link>
      <pubDate>Mon, 01 Mar 2021 14:12:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/es/es-stop/</guid>
      <description>加大延迟索引复制时间 1 2 3 4 5 curl -XPUT -H &amp;#34;Content-type: application/json&amp;#34; http://es:9200/_all/_settings -d &amp;#39;{ &amp;#34;settings&amp;#34;: { &amp;#34;index.unassigned.node_left.delayed_timeout&amp;#34;: &amp;#34;5m&amp;#34; } }&amp;#39; 通过API，临时禁用索引分片 1 2 3 4 5 curl -XPUT -H &amp;#34;Content-type: application/json&amp;#34; http://es:9200/_cluster/settings -d &amp;#39;{ &amp;#34;transient&amp;#34; : { &amp;#34;cluster.routing.allocation.enable&amp;#34; : &amp;#34;none&amp;#34; } }&amp;#39; 停止Elas</description>
    </item>
    
    <item>
      <title>Elasticsearch 重要的配置项</title>
      <link>http://www.unknowname.cn/post/es/es-conf/</link>
      <pubDate>Mon, 01 Mar 2021 13:48:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/es/es-conf/</guid>
      <description>示例elasticsearch.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 默认数据副本数index.number_of_replicas:1</description>
    </item>
    
    <item>
      <title>CoreDNS 配置示例</title>
      <link>http://www.unknowname.cn/post/k8s/coredns/</link>
      <pubDate>Mon, 01 Mar 2021 11:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/coredns/</guid>
      <description>corefile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 .:53 { hosts { 172.18.171.110 host1 172.18.203.237 host2 172.18.203.240 test.testdomain.cn cache 60 reload 1m # 一定要加下面语句 fallthrough } errors health kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa</description>
    </item>
    
    <item>
      <title>Istio快速实践一览</title>
      <link>http://www.unknowname.cn/post/k8s/istio/</link>
      <pubDate>Mon, 01 Mar 2021 11:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/istio/</guid>
      <description>Istio GatewayIngress 步骤: 创建Gateway 创建VirtualService 样例文件 gateway.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 apiVersion:networking.istio.io/v1alpha3kind:Gatewaymetadata:name:www-test-iospec:selector:istio:ingressgateway# use Istio default gateway implementationservers:- port:number:80name:httpprotocol:HTTPhosts:- &amp;#34;www.test.io&amp;#34; virtualserver.yaml 1 2 3 4 5 6 7 8 9 10 11 12</description>
    </item>
    
    <item>
      <title>GitLab CI/CD实践</title>
      <link>http://www.unknowname.cn/post/ci/gitlab-ci/</link>
      <pubDate>Sun, 28 Feb 2021 16:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ci/gitlab-ci/</guid>
      <description>简述 GitLab现已集成CI/CD功能。默认每个项目，都会自动启用CI/CD功能。但要使用，还需要配合Gitlab-Runner才可正常运行</description>
    </item>
    
    <item>
      <title>Graylog收集Nginx访问日志</title>
      <link>http://www.unknowname.cn/post/graylog/nginx-log-to-graylog/</link>
      <pubDate>Sun, 28 Feb 2021 15:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/graylog/nginx-log-to-graylog/</guid>
      <description>Nginx端配置 因为NGINX的access_log语法是支持发送至远端的syslog的，我们就是利用这一特性来实现。既然可以收集至Gray</description>
    </item>
    
    <item>
      <title>Graylog增加节点</title>
      <link>http://www.unknowname.cn/post/graylog/graylog-add-node/</link>
      <pubDate>Sun, 28 Feb 2021 12:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/graylog/graylog-add-node/</guid>
      <description>如果要完全实现高可用，那么Graylog三个组件都需要做到。官方并没有给出具体实施细节，但是官方给出了指导方案 MongoDB 需要做成复制集，并且使用Gr</description>
    </item>
    
    <item>
      <title>Graylog安装及介绍</title>
      <link>http://www.unknowname.cn/post/graylog/graylog/</link>
      <pubDate>Sun, 28 Feb 2021 10:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/graylog/graylog/</guid>
      <description>Graylog日志收集服务 介绍 Graylog是一个集中日志收集与检索系统。可以将它看成是一个EFK组合。它的底层搜索提供也是Elastics</description>
    </item>
    
    <item>
      <title>本地Repo仓库搭建</title>
      <link>http://www.unknowname.cn/post/linux/linix-repo/</link>
      <pubDate>Fri, 26 Feb 2021 09:31:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/linux/linix-repo/</guid>
      <description>将本地系统的/etc/yum.repos.d/目录中的yum源同步至本地，这样本地局域网就可以使用内网的yum源，加快速度 安装工具 1 yum install nginx yum-utils</description>
    </item>
    
    <item>
      <title>NGINX配置文件详解</title>
      <link>http://www.unknowname.cn/post/nginx/nginx-conf/</link>
      <pubDate>Fri, 26 Feb 2021 09:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/nginx-conf/</guid>
      <description>此文罗列下主要配置文件的参数含义 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54</description>
    </item>
    
    <item>
      <title>Rsync 同步文件</title>
      <link>http://www.unknowname.cn/post/linux/linux-rsync/</link>
      <pubDate>Fri, 26 Feb 2021 08:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/linux/linux-rsync/</guid>
      <description>rsync 同步不同主机的文件时，一个作为服务端，另一个作为客户端。在服务端，一般称为rsyncd 服务端 安装 1 yum install rsync -y 准备配置文件/etc/rsync</description>
    </item>
    
    <item>
      <title>OpenResty基于Lua依据IP简单灰度</title>
      <link>http://www.unknowname.cn/post/nginx/openresty-lua-backend/</link>
      <pubDate>Fri, 25 Dec 2020 19:43:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/openresty-lua-backend/</guid>
      <description>需求: 根据不同IP返回不同后端，实现一个简单版的一个灰度发布功能 使用到的模块 https://github.com/openresty/lua-nginx-module#synopsis 该模块已内置于OpenResty可以直接使用 方法一 OpenRe</description>
    </item>
    
    <item>
      <title>OpenResty基于Lua实现根据HTTP头限速</title>
      <link>http://www.unknowname.cn/post/nginx/openresty-lua-limit/</link>
      <pubDate>Mon, 21 Dec 2020 09:37:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/openresty-lua-limit/</guid>
      <description>OpenResty简要介绍 引用官方一段介绍: OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大</description>
    </item>
    
    <item>
      <title>OpenResty动态后端热加载</title>
      <link>http://www.unknowname.cn/post/nginx/openresty-upsync-backend/</link>
      <pubDate>Mon, 23 Nov 2020 12:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/openresty-upsync-backend/</guid>
      <description>使用到的模块: https://github.com/weibocom/nginx-upsync-module 通过第三方注册中心(Etcd/Consul)，NGINX/OpenResty从第三方拿后端信息，实现同步。该模块在修改后端注</description>
    </item>
    
    <item>
      <title>OpenResty配合GeoIP2识别客户端所在城市</title>
      <link>http://www.unknowname.cn/post/nginx/openresty-geoip2/</link>
      <pubDate>Tue, 27 Oct 2020 09:31:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/openresty-geoip2/</guid>
      <description>GeoIP数据太老，不能识别城市了，新项目升级为GeoIP2。要下载免费数据库文件，需要在官网进行注册。 用到的开源项目 https://github.com/maxmind/libmaxminddb https://github.com/leev/ngx_http_geoip2_module 免费的城市与国家数</description>
    </item>
    
    <item>
      <title>OpenResty后端HTTP健康检查</title>
      <link>http://www.unknowname.cn/post/nginx/openresty-upstream-check/</link>
      <pubDate>Fri, 23 Oct 2020 12:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/nginx/openresty-upstream-check/</guid>
      <description>使用到的模块: https://github.com/openresty/lua-resty-upstream-healthcheck NGINX默认自带的健康检查仅仅是检查后端服务器的端口（TCP层）是不是通的，应用层（HTTP）的异常并不能被检测到。 1 2 3</description>
    </item>
    
    <item>
      <title>MongoDB状态管理</title>
      <link>http://www.unknowname.cn/post/database/mongo/mongo_debug/</link>
      <pubDate>Tue, 13 Oct 2020 21:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mongo/mongo_debug/</guid>
      <description>当前服务器正在进行的操作 1 2 3 4 # 查询服务器所有正在Running的操作 db.currentOp(); # 只查找对dbName.collectionName的操作 db.currentOp({&amp;#34;ns&amp;#34;:&amp;#34;dbName.collectionName&amp;#34;}) 终止操</description>
    </item>
    
    <item>
      <title>MongoDB复制集实战</title>
      <link>http://www.unknowname.cn/post/database/mongo/mongo_repl/</link>
      <pubDate>Tue, 13 Oct 2020 13:40:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mongo/mongo_repl/</guid>
      <description>配置 不同机器的MongoDB服务进程使用相同启动参数运行: 1 mongod --replSet rs0 -f /etc/mongod.conf 三台机器运行起来后，再在三台当中任何一台中执行: 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>MongoDB分片</title>
      <link>http://www.unknowname.cn/post/database/mongo/mongo_shard/</link>
      <pubDate>Mon, 12 Oct 2020 13:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mongo/mongo_shard/</guid>
      <description>速览 官方建议至少三台以上,分片的前提需要副本集. 分片解决的问题 增加可用RAM 增加可用磁盘空间 减轻单台服务器压力 处理单个mongod无法承受的</description>
    </item>
    
    <item>
      <title>MongoDB基础</title>
      <link>http://www.unknowname.cn/post/database/mongo/mongo/</link>
      <pubDate>Sun, 11 Oct 2020 12:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mongo/mongo/</guid>
      <description>特点 索引 支持通用二级索引、唯一索引、复合索引、地理空间索引、全文索引 聚合 支持聚合管道(aggreation pipeline) 特殊集合类型 基于时间失效的集合，</description>
    </item>
    
    <item>
      <title>Kubernetes给予指定NameSpace的控制权限</title>
      <link>http://www.unknowname.cn/post/k8s/k8s-rbac-ns/</link>
      <pubDate>Sun, 11 Oct 2020 11:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/k8s-rbac-ns/</guid>
      <description>因网上都是基于命令行，网上给的方案不适用于通过Dashboard访问的方案。要微调下就可以。 创建ServiceAccount 1 2 3 4 5 6 7 8</description>
    </item>
    
    <item>
      <title>MySQL Cluster增加数据节点</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-cluster-mang/</link>
      <pubDate>Sat, 12 Sep 2020 12:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-cluster-mang/</guid>
      <description>添加新数据节点 添加新数据节点之前已经存在的表 的重新分配不是自动的，但是可以使用MySQL或另一个MySQL客户端应用程序中的简单SQL语句来</description>
    </item>
    
    <item>
      <title>MySQL Cluster安装</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-cluster-install/</link>
      <pubDate>Fri, 11 Sep 2020 16:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-cluster-install/</guid>
      <description>知道相关概念后，实际上手搭建一把。因为现在有Docker这个工具，吃螃蟹现在也方便多了，感谢无私的程序员，下面是基于Docker+docke</description>
    </item>
    
    <item>
      <title>MySQL Cluster基础介绍</title>
      <link>http://www.unknowname.cn/post/database/mysql/mysql-cluster-base/</link>
      <pubDate>Fri, 11 Sep 2020 12:35:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/database/mysql/mysql-cluster-base/</guid>
      <description>存在的局限 以下列举的比较重要的，更多限制请参照官方文档 不支持临时表TEMPORARY 不支持在TEXT和BLOB列上创建索引 不支持FULLTE</description>
    </item>
    
    <item>
      <title>Kubernetes基于Kubeadm安装</title>
      <link>http://www.unknowname.cn/post/k8s/k8s-install/</link>
      <pubDate>Tue, 11 Aug 2020 10:05:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/k8s/k8s-install/</guid>
      <description>kubeadm是官方提供的安装工具，自1.18.5以来，用它来安装非常简单。但官方的指导文档主要是基于单机版的，这里记录下集群版安装思路。 一</description>
    </item>
    
    <item>
      <title>LDAP Replication同步</title>
      <link>http://www.unknowname.cn/post/ldap/ldap-repl/</link>
      <pubDate>Sun, 01 Mar 2020 09:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ldap/ldap-repl/</guid>
      <description>原文: http://www.openldap.org/doc/admin24/replication.html 基础 OpenLDAP复制基于syncrepl进程。它有两个角色。一个是provider,另一个是consumer。以下是配置Prov</description>
    </item>
    
    <item>
      <title>LDAP SUDO 基本的schema模板解释</title>
      <link>http://www.unknowname.cn/post/ldap/ldap-schema/</link>
      <pubDate>Thu, 27 Feb 2020 22:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ldap/ldap-schema/</guid>
      <description>Sudo LDAP条目Schema解析 1 2 3 4 5 6 dn: cn=defaults,ou=SUDOers,dc=xueshandai,dc=com objectClass: top objectClass: sudoRole cn: defaults description: Default sudoOption&amp;#39;s go here sudoOption: env_keep+=SSH_AUTH_SOCKSUDO 一个sudoRole就是一个LDAP中的sudo用户。默认的sudo</description>
    </item>
    
    <item>
      <title>Linux使用LDAP认证</title>
      <link>http://www.unknowname.cn/post/ldap/ldap-centos/</link>
      <pubDate>Thu, 27 Feb 2020 21:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ldap/ldap-centos/</guid>
      <description>主机加入相关域(如果是WindowsAD就需要这一步) 1 2 3 4 5 6 7 8 # Ubuntu sudo apt install realmd sssd sssd-tools libnss-sss libpam-sss adcli krb5-user # CentOS yum install realmd sssd sssd-tools oddjob oddjob-mkhomedir adcli samba-common-tools ## 加入域 realm join -v xueshandai.com -U administrator 修改</description>
    </item>
    
    <item>
      <title>LDAP简介</title>
      <link>http://www.unknowname.cn/post/ldap/ldap-init/</link>
      <pubDate>Thu, 27 Feb 2020 20:11:11 +0800</pubDate>
      
      <guid>http://www.unknowname.cn/post/ldap/ldap-init/</guid>
      <description>LDAP可以看成是一个目录服务 完整条目解读: dn：cn=cc,ou=imcuser-test-ld,dc=zhjdtest,dc=com LD</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.unknowname.cn/post/about-me-en/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/about-me-en/</guid>
      <description>CHENG, JIAN NENG (Wells Cheng)  Senior Systems Engineer | +86 15618519793 | burtte@sina.com | China Basic  Sex: Male Location: ShenZheng, China Birthday: 20/02/1988 Github: https://github.com/UnknowName Blog: https://unknowname.github.io  Summary  More than five years work as a systems engineer, with a passion for cloud computing and DevOps. Proficient in Golang/Python,more than five years of experience. Familiar with kubernetes, OpenShift, and CNCF ecosystem. Proficient in Linux and networking, with CCNA certification acquired.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.unknowname.cn/post/assembly/day04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/assembly/day04/</guid>
      <description>寄存器的内存访问 CPU中，用16位寄存器来存储一个字（2Byte）,高8位存放高位字节，低8位存放低位字节.所以一个字需要2个内存存储单元（</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.unknowname.cn/post/english/now-over/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/now-over/</guid>
      <description>现在完全时态 1. 用法 1.1 表示从过去一某一时刻开始一直持续到现在的动作/状态 在这种用法中，还要两点需要注意： 谓语动词是延续性的动词（主系表不用考虑</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.unknowname.cn/post/english/p16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/english/p16/</guid>
      <description>冠词 a/an 只能修饰可数名词的单数，不能是复数和不可数名词 元音发音的单词，用an,其他用a 首次提到的人或事物 the 泛指一类事务，一般后面跟名词 The dog is cute</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.unknowname.cn/post/react/react-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/react/react-hook/</guid>
      <description>Hook是一个特殊函数，它可以勾入React的特性，如state 概览 Hook大致分为两大类，一类为state类，一类为effect类 stat</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>http://www.unknowname.cn/post/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.unknowname.cn/post/about-me/</guid>
      <description>基本信息 姓名: 程建能 出生年月: 1988.02.20 联系方式: 15618519793/2244180879@qq.com GitHub：https://github.com/UnknowName Blog: https://unknowname.github.io 个人简介 六年以上运维</description>
    </item>
    
  </channel>
</rss>
